{
  "createdAt": "2025-09-17T19:10:58.150Z",
  "updatedAt": "2025-09-17T19:25:14.000Z",
  "id": "ItgmKp2cKf7HvPgd",
  "name": "Daily AI News Aggregator",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        512,
        720
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * *"
            }
          ]
        }
      },
      "id": "daily-trigger",
      "name": "Daily AI News Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        512,
        880
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "min_traffic",
              "name": "min_traffic",
              "type": "number",
              "value": 500
            },
            {
              "id": "max_results",
              "name": "max_results",
              "type": "number",
              "value": 5
            },
            {
              "id": "jina_key",
              "name": "jina_key",
              "type": "string",
              "value": "jina_1c5653e0ce924d88b469bfc71b1e1ba5czt9bnraFUt2B15Jy5MouHrUUvF0"
            }
          ]
        },
        "options": {}
      },
      "id": "config",
      "name": "CONFIG",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        768,
        880
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "10uEB3IAhMV6XkKc6dgP9JzkG5Pc1Nj86mvQlsPwG2Os",
          "mode": "list",
          "cachedResultName": "AI New Agent",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/10uEB3IAhMV6XkKc6dgP9JzkG5Pc1Nj86mvQlsPwG2Os/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/10uEB3IAhMV6XkKc6dgP9JzkG5Pc1Nj86mvQlsPwG2Os/edit#gid=0"
        },
        "options": {}
      },
      "id": "get-saved-keywords",
      "name": "Get saved keywords",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1024,
        880
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "cZc9FZPSLRtIq9IL",
          "name": "Lakshit77 Account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://trends.google.com/trending/rss?geo=US",
        "options": {}
      },
      "id": "google-trends",
      "name": "GoogleTrends",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        880
      ]
    },
    {
      "parameters": {
        "options": {
          "explicitArray": false,
          "normalize": false
        }
      },
      "id": "xml-parser",
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "typeVersion": 1,
      "position": [
        1552,
        880
      ]
    },
    {
      "parameters": {
        "jsCode": "const max_results = $('CONFIG').first().json.max_results;\nconst min_traffic = $('CONFIG').first().json.min_traffic;\n\n// Handle case when Google Sheets node is disabled\nlet gsheetKeys = [];\ntry {\n    const gsheet = $('Get saved keywords').all();\n    gsheetKeys = gsheet.map(record => record.json.trending_keyword);\n} catch (error) {\n    // If Google Sheets node is disabled or fails, start with empty array\n    gsheetKeys = [];\n}\n\nconst items = $('XML').first().json.rss.channel.item;\nconst trafficKey = Object.keys(items[0]).find(key => key.includes('approx_traffic'));\nconst parseTraffic = (traffic) => parseInt(traffic.replace('+', ''), 10);\n\n// Expanded AI-related keywords for better matching\nconst aiKeywords = [\n    'artificial intelligence', 'AI', 'machine learning', 'ML', 'deep learning', \n    'neural network', 'chatgpt', 'openai', 'gpt', 'llm', 'generative ai', \n    'automation', 'robotics', 'computer vision', 'nlp', 'natural language processing',\n    'claude', 'gemini', 'bard', 'anthropic', 'meta ai', 'microsoft ai',\n    'ai model', 'ai tool', 'ai platform', 'ai startup', 'ai company',\n    'machine vision', 'speech recognition', 'text generation', 'image generation',\n    'ai ethics', 'ai safety', 'ai regulation', 'ai policy', 'ai research'\n];\n\n// For testing: let's include ALL trending topics first, then we can filter later\nconst newItems = items.map(item => {\n    const links = Array.isArray(item['ht:news_item']) ? item['ht:news_item'].slice(0, 3) : [];\n\n    const flattenedLinks = links.reduce((acc, news, index) => {\n        acc[`news_item_url${index + 1}`] = news['ht:news_item_url'];\n        acc[`news_item_title${index + 1}`] = news['ht:news_item_title'];\n        acc[`news_item_picture${index + 1}`] = news['ht:news_item_picture'];\n        acc[`news_item_source${index + 1}`] = news['ht:news_item_source'];\n        return acc;\n    }, {});\n\n    return {\n        trending_keyword: item.title,\n        approx_traffic: parseTraffic(item[trafficKey]),\n        pubDate: item.pubDate,\n        ...flattenedLinks,\n    };\n}).filter(item => {\n    const keyword = item.trending_keyword.toLowerCase();\n    const isAI = aiKeywords.some(aiKeyword => keyword.includes(aiKeyword.toLowerCase()));\n    \n    // For now, let's include ALL topics to test the workflow\n    // Later we can uncomment the AI filter\n    return item.approx_traffic >= min_traffic && \n           !gsheetKeys.includes(item.trending_keyword);\n           // && isAI; // Temporarily disabled AI filter for testing\n});\n\nlet sortedItems = newItems.sort((a, b) => b.approx_traffic - a.approx_traffic);\nif (max_results > 0) {\n    sortedItems = sortedItems.slice(0, max_results);\n}\n\nreturn sortedItems;"
      },
      "id": "new-keywords",
      "name": "New keywords",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1792,
        880
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "loop-items",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        752,
        1392
      ]
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $('New keywords').item.json.news_item_url1 }}",
        "sendHeaders": true,
        "specifyHeaders": "keypair",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('CONFIG').first().json.jina_key }}"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "X-Remove-Selector",
              "value": "a, link, script, footer, img, svg"
            },
            {
              "name": "X-Retain-Images",
              "value": "none"
            },
            {
              "name": "X-Return-Format",
              "value": "text"
            }
          ]
        }
      },
      "id": "content1",
      "name": "content1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1024,
        1712
      ]
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $('New keywords').item.json.news_item_url2 }}",
        "sendHeaders": true,
        "specifyHeaders": "keypair",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('CONFIG').first().json.jina_key }}"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "X-Remove-Selector",
              "value": "a, link, script, footer, img, svg"
            },
            {
              "name": "X-Retain-Images",
              "value": "none"
            },
            {
              "name": "X-Return-Format",
              "value": "text"
            }
          ]
        }
      },
      "id": "content2",
      "name": "content2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        1712
      ]
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $('New keywords').item.json.news_item_url3 }}",
        "sendHeaders": true,
        "specifyHeaders": "keypair",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('CONFIG').first().json.jina_key }}"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "X-Remove-Selector",
              "value": "a, link, script, footer, img, svg"
            },
            {
              "name": "X-Retain-Images",
              "value": "none"
            },
            {
              "name": "X-Return-Format",
              "value": "text"
            }
          ]
        }
      },
      "id": "content3",
      "name": "content3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1568,
        1712
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "summary",
              "name": "summary",
              "type": "string",
              "value": "={{ $('content1').item.json.data.text.replaceAll('\\n', ' ').trim() }}\\n---\\n{{ $('content2').item.json.data.text.replaceAll('\\n', ' ').trim() }}\\n---\\n{{ $('content3').item.json.data.text.replaceAll('\\n', ' ').trim() }}"
            },
            {
              "id": "trending_keyword",
              "name": "trending_keyword",
              "type": "string",
              "value": "={{ $('New keywords').item.json.trending_keyword }}"
            },
            {
              "id": "approx_traffic",
              "name": "approx_traffic",
              "type": "number",
              "value": "={{ $('New keywords').item.json.approx_traffic }}"
            },
            {
              "id": "pubDate",
              "name": "pubDate",
              "type": "string",
              "value": "={{ $('New keywords').item.json.pubDate }}"
            },
            {
              "id": "status",
              "name": "status",
              "type": "string",
              "value": "idea"
            },
            {
              "id": "news_item_url1",
              "name": "news_item_url1",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_url1 }}"
            },
            {
              "id": "news_item_title1",
              "name": "news_item_title1",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_title1 }}"
            },
            {
              "id": "news_item_title2",
              "name": "news_item_title2",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_title2 }}"
            },
            {
              "id": "news_item_url2",
              "name": "news_item_url2",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_url2 }}"
            },
            {
              "id": "news_item_title3",
              "name": "news_item_title3",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_title3 }}"
            },
            {
              "id": "news_item_url3",
              "name": "news_item_url3",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_url3 }}"
            },
            {
              "id": "news_item_picture1",
              "name": "news_item_picture1",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_picture1 }}"
            },
            {
              "id": "news_item_source1",
              "name": "news_item_source1",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_source1 }}"
            },
            {
              "id": "news_item_picture2",
              "name": "news_item_picture2",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_picture2 }}"
            },
            {
              "id": "news_item_source2",
              "name": "news_item_source2",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_source2 }}"
            },
            {
              "id": "news_item_picture3",
              "name": "news_item_picture3",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_picture3 }}"
            },
            {
              "id": "news_item_source3",
              "name": "news_item_source3",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_source3 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "mapping",
      "name": "Mapping",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        1392
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": "",
        "sheetName": "gid=0",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "idea",
            "pubDate": "={{ $json.pubDate }}",
            "abstract": "={{ $json.summary.replaceAll('  ', '').substring(0, 49999) }}",
            "approx_traffic": "={{ $json.approx_traffic }}",
            "news_item_url1": "={{ $json.news_item_url1 }}",
            "news_item_url2": "={{ $json.news_item_url2 }}",
            "news_item_url3": "={{ $json.news_item_url3 }}",
            "news_item_title1": "={{ $json.news_item_title1 }}",
            "news_item_title2": "={{ $json.news_item_title2 }}",
            "news_item_title3": "={{ $json.news_item_title3 }}",
            "trending_keyword": "={{ $json.trending_keyword }}",
            "news_item_source1": "={{ $json.news_item_source1 }}",
            "news_item_source2": "={{ $json.news_item_source2 }}",
            "news_item_source3": "={{ $json.news_item_source3 }}",
            "news_item_picture1": "={{ $json.news_item_picture1 }}",
            "news_item_picture2": "={{ $json.news_item_picture2 }}",
            "news_item_picture3": "={{ $json.news_item_picture3 }}"
          }
        },
        "options": {}
      },
      "id": "google-sheets",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1584,
        1184
      ]
    }
  ],
  "connections": {
    "Daily AI News Trigger": {
      "main": [
        [
          {
            "node": "CONFIG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "CONFIG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CONFIG": {
      "main": [
        [
          {
            "node": "Get saved keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get saved keywords": {
      "main": [
        [
          {
            "node": "GoogleTrends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GoogleTrends": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "New keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New keywords": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Mapping",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "content1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "content1": {
      "main": [
        [
          {
            "node": "content2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "content2": {
      "main": [
        [
          {
            "node": "content3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "content3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapping": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "91e6f31f-735b-4155-96ed-e21dc2173789",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-17T19:10:58.152Z",
      "updatedAt": "2025-09-17T19:10:58.152Z",
      "role": "workflow:owner",
      "workflowId": "ItgmKp2cKf7HvPgd",
      "projectId": "iOyc3VpWKvgHH9fv"
    }
  ],
  "tags": []
}