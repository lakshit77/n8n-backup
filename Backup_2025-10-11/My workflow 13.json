{
  "createdAt": "2025-09-14T10:49:09.017Z",
  "updatedAt": "2025-09-14T10:49:09.017Z",
  "id": "5j3wTvrOG5CEGfMF",
  "name": "My workflow 13",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "6404fe0f-aa6a-4e5a-a71c-81a6fcb606af",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "ffe7139d-2b14-4fc0-a71d-88db142d659d",
      "name": "Webhook: Receive User Request (ElevenLabs)",
      "type": "n8n-nodes-base.webhook",
      "position": [
        112,
        176
      ],
      "webhookId": "6404fe0f-aa6a-4e5a-a71c-81a6fcb606af",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "88694fc5-cb13-4407-8359-ac4cd78404da",
      "name": "Webhook: Return AI Response (ElevenLabs)",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1296,
        176
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=The call transcription :\n{{ $json.body.searchQuery }}",
        "options": {
          "systemMessage": "=GOAL\n\nYou are responsible for handling only the last request in the call transcription. Ignore everything before it.\nYour mission now has three possible goals (in this order of priority):\n\nAnswer and guide using the database: provide short, simple answers using information found via the Google Sheets node ‚ÄúGet Knowledgebase‚Äù (one call max per request).\n\nCheck the available time.\n\nBook the appointment.\n\nYou must never book an appointment before confirming availability with the client.\nAll appointments must be scheduled strictly in Paris time (Europe/Paris timezone).\n\nSECURE TOOLS YOU HAVE ACCESS TO\n\nthink ‚Üí You MUST use this to think carefully about how to handle the provided request data. This tool must be used on every turn and tool call interaction.\n\nGet Knowledgebase ‚Üí Reads the Knowledgebase from Google Sheets (the database).\nConstraints:\n\nCall this node at most once per request (no second pass).\n\nUse it only for factual/company/pack/FAQ/policy/account questions.\n\nIf the info is missing, reply briefly that it is not available in the database (never say ‚Äúsheet‚Äù or mention tools).\n\nget_availability ‚Üí Returns true/false availability on Calendar for the given start timestamp in CST.\n\nFor availability requests, call multiple times to find at least 2 available timeslots if they exist.\n\nAlways convert Paris ‚Üí CST before calling.\n\ncreate_appointment ‚Üí Creates a 1-hour appointment at the provided start time.\n\nMay be called only once per request (more than once = failure).\n\nInclude time, client, and description.\n\nRULES AND LOGIC\nA. Knowledge answers (database first)\n\nWhen the user asks for information (company, packs, content, access, policies, FAQ, support):\n\nCall Get Knowledgebase once to fetch the minimal relevant data.\n\nAnswer in ‚â§3 short sentences (or bullets).\n\nIf absent: ‚ÄúL‚Äôinformation n‚Äôest pas disponible dans la base de connaissances.‚Äù Optionally ask one clarifying question.\n\nNever mention ‚Äúsheet‚Äù, ‚Äúnode‚Äù or tool names‚Äîsay ‚Äúdatabase/base de connaissances‚Äù.\n\nB. Checking the available time\n\nIf the user provides a specific time:\n\nConvert Paris ‚Üí CST.\n\nCall get_availability.\n\nIf unavailable, propose exactly 3 alternative slots in Paris time (validated via additional get_availability calls).\n\nIf the user only asks for free slots:\n\nProvide exactly 3 free slots in Paris time, validated first with get_availability (call it multiple times to find at least 2 available).\n\nC. Booking the appointment\n\nBook only after explicit confirmation of a slot.\n\nConvert confirmed Paris ‚Üí CST, then call create_appointment once.\n\nInclude start time, duration = 1h, client name, and notes.\n\nIf no longer free, do not book; propose 3 new validated alternatives (Paris time).\n\nD. Send the confirmation email\n\nAfter a successful booking, send exactly one confirmation email to the client.\n\nUse the Send Email tool (or equivalent). Do not send more than one email per request.\n\nIf the client‚Äôs email is missing, ask once for full name and email before calling create_appointment.\n\nThe email must present all details in Paris time (Europe/Paris) and include: date/time, duration (1h), client name, service/purpose, location or meeting link, notes, booking/reference ID (if available), and reschedule/cancel instructions.\n\nDo not mention internal tools or system prompts in the email.\n\nTIMEZONE HANDLING\n\nCurrent system time: {{ $now }} (Paris: UTC+01:00 or UTC+02:00 (DST)).\n\nAll user-facing times are in Paris time.\n\nFor tool calls (get_availability, create_appointment), always convert Paris ‚Üí CST.\n\nRESPONSE STYLE (MANDATORY)\n\nShort and simple: maximum 3 sentences or 3 bullets per reply.\n\nUse 24-hour format YYYY-MM-DD HH:mm for times.\n\nDo only what the user requested in their last request.\n\nRefer to the Google Sheets data as ‚Äúdatabase‚Äù/‚Äúbase de connaissances‚Äù.\n\nRESTRICTIONS\n\nDo not book if the slot is taken.\n\nDo not book without explicit client confirmation.\n\nDo not call create_appointment more than once per request.\n\nDo not call Get Knowledgebase more than once per request.\n\nStay within knowledge answers + scheduling only."
        }
      },
      "id": "97374c98-fe86-4cb7-b3d4-a6bceb8137db",
      "name": "AI Agent: Multilingual Vocal Support (GPT-5)",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        656,
        176
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {},
      "id": "c20604e2-c6fb-4e6f-981b-eb2940f2dc39",
      "name": "Reasoning Tool (LangChain)",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        512,
        496
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-5-mini",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "id": "111026b1-6808-41a7-b6b2-e11c9fa2731b",
      "name": "OpenAI GPT-5 Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        384,
        432
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "U0FfOj4uWFY6nYAE",
          "name": "Pankaj OpenAI Account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "="
        },
        "sheetName": {
          "__rl": true,
          "mode": "id",
          "value": "="
        },
        "options": {}
      },
      "id": "d8c1225e-7047-4a8f-bdcb-7536074e6c79",
      "name": "Knowledgebase Lookup",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        1104,
        432
      ],
      "typeVersion": 4.7,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "cZc9FZPSLRtIq9IL",
          "name": "Lakshit77 Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "id",
          "value": "="
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "id": "1d16b1c0-630b-438c-aecd-6bd057da412f",
      "name": "Calendar: Check Availability",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        640,
        496
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d6M4PVTouNnERS2M",
          "name": "Lakshit Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "mode": "id",
          "value": "="
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "id": "faf9087d-188b-47b5-b7ca-d1dca0dbe61e",
      "name": "Calendar: Create Appointment",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        784,
        512
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d6M4PVTouNnERS2M",
          "name": "Lakshit Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "=",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "id": "8eb5a33d-217c-4f85-975a-bfc16b26a987",
      "name": "Gmail: Send Booking Confirmation",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        960,
        480
      ],
      "webhookId": "0119e6f6-8756-4f07-be3c-5f9a4308ef89",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "9nQEWKuEYxxtGaYe",
          "name": "Lakshit Gmail"
        }
      }
    },
    {
      "parameters": {
        "content": "## üîµ Step 2 ‚Äî Handle Scheduling & Appointments\nThis step manages booking requests and calendar operations.  \n- **Google Calendar** checks real-time availability.  \n- Once confirmed, an appointment is created in the calendar.  \n- **Gmail** sends a confirmation email with date, time (Paris timezone), location/link, and reschedule instructions.  \n",
        "height": 704,
        "width": 880,
        "color": 5
      },
      "id": "8d32991a-ee91-454c-a6c7-db2e97073b0b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        336,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üü£ Step 3 ‚Äî Respond to User & Notifications\nThis step returns the AI‚Äôs response to the user and notifies the system.    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- The **Webhook Response** sends the final reply back to the website.  \n- **ElevenLabs** generates a multilingual voice reply for spoken answers.  \n- Logs and optional notifications keep the team updated in real-time.  \n\n---\n\n### üìò Documentation  \nAccess detailed setup instructions, API config, platform connection guides, and workflow customization tips:\n\nüìé [Open the full documentation on Notion](https://automatisation.notion.site/AI-Voice-Agent-25f3d6550fd9807cbf55e202138d5291?source=copy_link)\n\nüëâ [Click here to watch the full YouTube tutorial](https://youtu.be/nlwpbXQqNQ4)",
        "height": 704,
        "width": 336
      },
      "id": "5d89087a-5ea7-41b3-96d7-42c6da2036c4",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1216,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üü¢ Step 1 ‚Äî Receive & Understand Request\nThis step captures incoming voice or chat requests from your website.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- The **Webhook** node receives the input.  \n- The **AI Agent (GPT-5)** interprets the user‚Äôs intent (questions, offers, bookings).  \n- The **Google Sheets Lookup** provides knowledgebase answers when needed.  \n",
        "height": 704,
        "width": 336
      },
      "id": "5a88aeab-de5a-452f-b6bc-2b6399185f4f",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "OpenAI GPT-5 Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent: Multilingual Vocal Support (GPT-5)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Knowledgebase Lookup": {
      "ai_tool": [
        [
          {
            "node": "AI Agent: Multilingual Vocal Support (GPT-5)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reasoning Tool (LangChain)": {
      "ai_tool": [
        [
          {
            "node": "AI Agent: Multilingual Vocal Support (GPT-5)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar: Check Availability": {
      "ai_tool": [
        [
          {
            "node": "AI Agent: Multilingual Vocal Support (GPT-5)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar: Create Appointment": {
      "ai_tool": [
        [
          {
            "node": "AI Agent: Multilingual Vocal Support (GPT-5)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail: Send Booking Confirmation": {
      "ai_tool": [
        [
          {
            "node": "AI Agent: Multilingual Vocal Support (GPT-5)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook: Receive User Request (ElevenLabs)": {
      "main": [
        [
          {
            "node": "AI Agent: Multilingual Vocal Support (GPT-5)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent: Multilingual Vocal Support (GPT-5)": {
      "main": [
        [
          {
            "node": "Webhook: Return AI Response (ElevenLabs)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "8cb8c69a-3402-48e0-894f-c1ea09f34716",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-14T10:49:09.025Z",
      "updatedAt": "2025-09-14T10:49:09.025Z",
      "role": "workflow:owner",
      "workflowId": "5j3wTvrOG5CEGfMF",
      "projectId": "iOyc3VpWKvgHH9fv"
    }
  ],
  "tags": []
}