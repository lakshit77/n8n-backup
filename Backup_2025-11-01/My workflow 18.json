{
  "createdAt": "2025-10-30T15:22:30.064Z",
  "updatedAt": "2025-10-30T15:47:20.000Z",
  "id": "eMpzI3P1hdvLsO09",
  "name": "My workflow 18",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "c2a37ab5-9316-4d86-9685-c8a91cf3ea48",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -512,
        -96
      ],
      "id": "8e8bdf04-69eb-4d74-939e-cb7244aaee86",
      "name": "Receive Whatsapp Message",
      "webhookId": "c2a37ab5-9316-4d86-9685-c8a91cf3ea48"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8414a71a-e82b-4097-ac52-c1e6c1a725ee",
              "name": "message",
              "value": "={{ $json.body.Body }}",
              "type": "string"
            },
            {
              "id": "125b837c-7021-4399-bd80-f45e12c30aac",
              "name": "number",
              "value": "={{ $json.body.To.replace('whatsapp:', '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -288,
        -96
      ],
      "id": "ff64a370-e227-4d30-bc08-35b134ae3674",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "dataTableId": {
          "__rl": true,
          "value": "aNkqPGZsrwVsVTiZ",
          "mode": "list",
          "cachedResultName": "Msg Batch Processing",
          "cachedResultUrl": "/projects/iOyc3VpWKvgHH9fv/datatables/aNkqPGZsrwVsVTiZ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "message": "={{ $json.message }}",
            "message_status": "in_queue",
            "number": "={{ $json.number }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "message_status",
              "displayName": "message_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "number",
              "displayName": "number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        -80,
        -96
      ],
      "id": "57665a87-88f7-4a23-b277-7c8b8589335a",
      "name": "Insert row"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        128,
        -96
      ],
      "id": "6e584735-2255-4598-b46d-6c340c6276f9",
      "name": "Wait",
      "webhookId": "eb4fabe4-2713-4aef-a23e-9eb71641a239"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "aNkqPGZsrwVsVTiZ",
          "mode": "list",
          "cachedResultName": "Msg Batch Processing",
          "cachedResultUrl": "/projects/iOyc3VpWKvgHH9fv/datatables/aNkqPGZsrwVsVTiZ"
        },
        "matchType": "allConditions",
        "filters": {
          "conditions": [
            {
              "keyName": "message_status",
              "keyValue": "=in_queue"
            },
            {
              "keyName": "number",
              "keyValue": "={{ $json.number }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        336,
        -96
      ],
      "id": "821ca5ec-907a-47c0-9e9a-d78a78c682f9",
      "name": "Get row(s)"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        544,
        -96
      ],
      "id": "9f3a47e3-d7b2-4010-bdd8-fa20aa87ee51",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "update",
        "dataTableId": {
          "__rl": true,
          "value": "aNkqPGZsrwVsVTiZ",
          "mode": "list",
          "cachedResultName": "Msg Batch Processing",
          "cachedResultUrl": "/projects/iOyc3VpWKvgHH9fv/datatables/aNkqPGZsrwVsVTiZ"
        },
        "matchType": "allConditions",
        "filters": {
          "conditions": [
            {
              "keyValue": "={{ $json.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "message_status": "processed"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "message_status",
              "displayName": "message_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "number",
              "displayName": "number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        752,
        0
      ],
      "id": "2254be6f-197c-464c-a421-488ceafaa0a1",
      "name": "Update row(s)"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        816,
        -224
      ],
      "id": "a571340f-25c8-42a8-b096-da8e13f1cac3",
      "name": "Done Looping"
    },
    {
      "parameters": {
        "jsCode": "// Combine all \"message\" values into a single comma-separated string\n// and include the \"number\" field from any one of the input items (e.g., the first one)\n\nconst messages = items\n  .map(item => item.json.message)\n  .filter(Boolean)\n  .join(', ');\n\nconst number = items[0]?.json?.number || null;\n\nreturn [\n  {\n    json: {\n      number: number,\n      merged_message: messages\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1024,
        -224
      ],
      "id": "e08d3be6-4572-487f-97e1-4d44917c5c7f",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.merged_message }}",
        "options": {
          "systemMessage": "=Name: Kady\nRole: You are an expert receptionist for Toothsi Clinic. Your job is to communicate with your user, serve them properly, and solve their task. \n\n\nNote:\nOutput your response as a JSON object with between one and three messages, where possible, default to fewer messages.\n\nSince you are an SMS assistant, your output usually spans multiple â€˜textsâ€™. Feel free to use emojis in messages, and if it makes sense, some messages can be emojis only.\n\nExample:\n\n{\n  \"message_1\": \"Hi there!\",\n  \"message_2\": \"ðŸ˜Š\"\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1232,
        -224
      ],
      "id": "650970ed-d690-4e05-bb3f-eccdb1d19a69",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1104,
        -16
      ],
      "id": "4953a263-a2be-4923-8a5e-cc4596f52828",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "TLy9RuRkIKncoUiy",
          "name": "OpenRouter Freelance account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.number }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1248,
        -16
      ],
      "id": "f06a755b-440c-463f-b6f4-f62ec8020d7c",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "jsCode": "// Parse JSON string from the \"output\" field and convert messages into an array of objects\n\nconst rawOutput = items[0].json.output; // get the string\nconst parsed = JSON.parse(rawOutput);   // parse the JSON string\n\n// Convert key-value pairs into list of objects\nconst messageList = Object.entries(parsed).map(([key, value]) => ({\n  key,\n  message: value\n}));\n\nreturn messageList.map(msg => ({ json: msg }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1584,
        -224
      ],
      "id": "9688ce5d-b5a7-44d5-ad61-d81ae092ac6f",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1792,
        -224
      ],
      "id": "cdd0de55-f087-48f5-87aa-552fff36c49d",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.twilio.com/2010-04-01/Accounts/AC512855366730e39b4a0857b16fb14f27/Messages.json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "To",
              "value": "={{$node[\"Receive Whatsapp Message\"].json[\"body\"][\"From\"]}}"
            },
            {
              "name": "From",
              "value": "={{$node[\"Receive Whatsapp Message\"].json[\"body\"][\"To\"]}}"
            },
            {
              "name": "Body",
              "value": "={{ $json.message }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2096,
        -144
      ],
      "id": "3fac5da1-2ee4-4d80-928e-4770ba1c1ed7",
      "name": "Send Message",
      "credentials": {
        "httpBasicAuth": {
          "id": "WsQzmrY4u3R3NvDi",
          "name": "Twillio cred 2"
        }
      }
    }
  ],
  "connections": {
    "Receive Whatsapp Message": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Insert row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert row": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get row(s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s)": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Done Looping",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update row(s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row(s)": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Done Looping": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Receive Whatsapp Message": [
      {
        "json": {
          "headers": {
            "host": "n8n.srv894857.hstgr.cloud",
            "user-agent": "TwilioProxy/1.1",
            "content-length": "553",
            "accept": "*/*",
            "content-type": "application/x-www-form-urlencoded",
            "i-twilio-idempotency-token": "91d9b623-14b6-4780-9b62-b4ae51d2d0db",
            "x-forwarded-for": "54.224.251.76",
            "x-forwarded-host": "n8n.srv894857.hstgr.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "ad2eef6684ed",
            "x-home-region": "us1",
            "x-real-ip": "54.224.251.76",
            "x-twilio-signature": "x30FbyhNIH2wJzIdVWEuR+9ZMh4=",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "SmsMessageSid": "SMc699c8b834931b3e4d7d0c640c76c716",
            "NumMedia": "0",
            "ProfileName": "Lakshit",
            "MessageType": "text",
            "SmsSid": "SMc699c8b834931b3e4d7d0c640c76c716",
            "WaId": "919987749950",
            "SmsStatus": "received",
            "Body": "hey",
            "To": "whatsapp:+12678395989",
            "NumSegments": "1",
            "ReferralNumMedia": "0",
            "MessageSid": "SMc699c8b834931b3e4d7d0c640c76c716",
            "AccountSid": "AC512855366730e39b4a0857b16fb14f27",
            "ChannelMetadata": "{\"type\":\"whatsapp\",\"data\":{\"context\":{\"ProfileName\":\"Lakshit\",\"WaId\":\"919987749950\"}}}",
            "From": "whatsapp:+919987749950",
            "ApiVersion": "2010-04-01"
          },
          "webhookUrl": "https://n8n.srv894857.hstgr.cloud/webhook/c2a37ab5-9316-4d86-9685-c8a91cf3ea48",
          "executionMode": "production"
        }
      }
    ]
  },
  "versionId": "3d81ea78-01e2-4be3-b132-10e8e6775f06",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-10-30T15:22:30.069Z",
      "updatedAt": "2025-10-30T15:22:30.069Z",
      "role": "workflow:owner",
      "workflowId": "eMpzI3P1hdvLsO09",
      "projectId": "iOyc3VpWKvgHH9fv"
    }
  ],
  "tags": []
}