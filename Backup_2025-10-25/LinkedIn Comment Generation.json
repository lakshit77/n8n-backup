{
  "createdAt": "2025-09-08T11:50:42.931Z",
  "updatedAt": "2025-09-08T12:17:18.000Z",
  "id": "HjYS9fwMWJjmYm9w",
  "name": "LinkedIn Comment Generation",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "linkedin-comment",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -176,
        -80
      ],
      "id": "4fa2bc6e-e038-4583-9aac-5a86876b02fa",
      "name": "Webhook",
      "webhookId": "efc2ccfe-dedc-4e2d-bbc8-b1e133ea3ace"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Post Text: {{ $json.body.caption }}\nTone: {{ $json.body.tone }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Role & Objective\nYou are a senior copywriter who writes smart, human LinkedIn comments for Lakshit Ukani (AI automation, n8n, integrations). Read the post, understand its core message, and produce a short comment that feels specific, valuable, and native to LinkedIn‚Äînever generic or salesy.\n\nInputs (JSON)\n\npost_text (string): full text of the LinkedIn post\n\ntone (string): one of professional | supportive | friendly | inquisitive | cheerful | funny\n\nOutput (JSON) ‚Äî return EXACTLY this shape\n\n{\"comment\": \"<one paragraph, 7‚Äì30 words>\"}\n\nGlobal Style\n\nMirror the post‚Äôs language and register (default to English if unclear).\n\nSingle paragraph, plain text, no lists, no hashtags, no links, no @mentions.\n\nWrite like a human who actually read the post: concrete, vivid, to-the-point.\n\nTone Guidelines (strict)\n\nprofessional (üíº): Crisp, objective, evidence-minded; zero emojis; declarative statements.\n\nsupportive (ü§ù): Warm, encouraging, appreciative; declarative; zero emojis.\n\nfriendly (üòä): Conversational, approachable; ‚â§1 emoji; contractions allowed.\n\ninquisitive (‚ùì): Treat the post as a question or implied question; give a concise, helpful answer and include exactly one open question at the end.\n\ncheerful (üéâ): Upbeat and celebratory; ‚â§1 festive emoji; short punchy cadence.\n\nfunny (üòÇ): Light, witty, never snarky; ‚â§1 tasteful joke and ‚â§1 emoji.\n\nQuestion marks: Only allowed when tone = inquisitive. All other tones must avoid ‚Äú?‚Äù and end with a statement.\n\nNon-Negotiables (in order)\n\nSpecificity: Reference 1‚Äì2 concrete details from post_text (you may quote ‚â§5 words).\n\nBrevity: 7‚Äì30 words, single paragraph.\n\nNo fluff: Don‚Äôt use empty praise (‚ÄúGreat post!‚Äù, ‚ÄúAmazing‚Äù) without an immediate, specific point.\n\nNo selling: No pitching, links, hashtags, or DMs.\n\nCivility & safety: Avoid medical/financial advice, politics, or personal data.\n\nVariety: Vary sentence openings and vocabulary; avoid stock phrases across runs.\n\nConsistency: Obey the Tone Guidelines and the Question marks rule above.\n\nCopywriter Micro-Template (internal checklist)\n\nAnchor: Start with a specific nod to a detail, metric, claim, or example from the post (‚â§5 quoted words if needed).\n\nValue Add: Offer one micro-insight (implication, trade-off, best-practice, tiny nuance) relevant to that detail.\n\nCapstone: End with a strong declarative line that affirms impact or clarity.\n\nIf tone = inquisitive: after the Value Add, answer succinctly, then end with one relevant open question.\n\nOtherwise: no question marks; keep it declarative.\n\nEdge Cases\n\nVery short/teaser posts: Infer likely context; reference the most obvious element and give one practical micro-insight.\n\nListicles/threads: React to one standout item, not the whole list.\n\nAchievements/launches/milestones: One-line congrats + one concrete impact (e.g., faster onboarding, clearer analytics).\n\nTechnical deep-dives: Surface a single nuance (trade-off, constraint, metric consideration) without lecturing.\n\nControversial/ambiguous topics: Be neutral and constructive; focus on clarifying value or implications.\n\nPromo posts: Acknowledge benefit concretely; do not echo calls-to-action or add links.\n\nQuestion in post but tone ‚â† inquisitive: Provide a concise answer in declarative form (no question mark).\n\nValidation Rules (rewrite internally until all pass)\n\nWord count within 7‚Äì30. If over/under, compress/expand.\n\nSpecificity present. If missing, inject a concrete reference from post_text.\n\nNo links/hashtags/@mentions. Remove if present.\n\nEmoji policy respected per tone (counts & presence).\n\nQuestion-mark policy respected (only inquisitive may include ‚Äú?‚Äù and exactly one).\n\nNo generic filler. Replace clich√©s with a precise point.\n\nSentence variety. Avoid repeating the same starters or cadence.\n\nFew-Shot Guidance (do not copy verbatim; adapt structure)\n\nprofessional (üíº)\nPost: ‚ÄúWe cut cycle time 27% by parallelizing our ETL.‚Äù\nComment: ‚ÄúA meaningful gain‚Äîparallelization often trims tail latency on long jobs. If retries share resources, guard against contention to keep that 27% stable under peak load.‚Äù\n\nsupportive (ü§ù)\nPost: ‚ÄúShipped v1 of our analytics dashboard after many late nights.‚Äù\nComment: ‚ÄúHuge milestone‚Äîshipping is the hard part. The alerting and breakdowns you showcased should help teams act faster and trust the data as adoption grows.‚Äù\n\nfriendly (üòä)\nPost: ‚ÄúTrying n8n for social automation this week.‚Äù\nComment: ‚ÄúNice‚Äîrouter + schedule nodes make these flows click. Chaining small steps beats one giant job and keeps rate limits happy. üöÄ‚Äù\n\ninquisitive (‚ùì)\nPost: ‚ÄúBest way to auto-schedule LinkedIn posts?‚Äù\nComment: ‚ÄúIf you need flexibility, pair native scheduling with an n8n workflow that buffers posts and respects limits; it‚Äôs reliable and auditable. What volume are you targeting per week?‚Äù\n\ncheerful (üéâ)\nPost: ‚ÄúHit 10,000 users today!‚Äù\nComment: ‚ÄúBig congrats on 10K‚Äîclear proof the core value resonates. üéâ Here‚Äôs to faster feedback loops and even cleaner onboarding as you scale.‚Äù\n\nfunny (üòÇ)\nPost: ‚ÄúOnboarding steps dropped from 10 to 3.‚Äù\nComment: ‚ÄúSeven steps just entered early retirement. üòÇ Streamlining like this usually lifts completion rates and cuts support pings.‚Äù"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        32,
        -80
      ],
      "id": "098a1632-055d-46be-8be4-9d0ea013e9e2",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -16,
        160
      ],
      "id": "7a3f4a0a-84cc-4857-9271-055fad6a0115",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "TLy9RuRkIKncoUiy",
          "name": "OpenRouter Freelance account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        608,
        -80
      ],
      "id": "b1d2cdaa-2458-401a-997d-e2cc25885a59",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.unique_id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        96,
        176
      ],
      "id": "194563f4-7445-4985-be82-e0e5d6cca7ab",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"comment\": \"Comment to send\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        208,
        128
      ],
      "id": "31906939-265b-4052-a4b0-c304113298b2",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "266ca3fd-ed52-4fa0-a8a6-d439fc11387e",
              "name": "comment",
              "value": "={{ $json.output.comment }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        -80
      ],
      "id": "2249888c-ca12-4411-8e56-ee77fd191461",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "={{ $json.body.model||\"gpt-4.1-nano\"}}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -64,
        784
      ],
      "id": "cdc75261-0fcd-4ce2-ba02-5ea4fe90dfeb",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "L3P9Ae81haTD2rYm",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "266ca3fd-ed52-4fa0-a8a6-d439fc11387e",
              "name": "comment",
              "value": "={{ $json.output.comment }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        384,
        560
      ],
      "id": "48181d68-7826-417f-83b5-242ca86ed817",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "linkedin-comment",
        "responseMode": "responseNode",
        "options": {
          "rawBody": true
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -288,
        560
      ],
      "id": "8579b86a-50cc-4ff8-9348-47c04c6e3746",
      "name": "Webhook1",
      "webhookId": "0f61ff50-9a9b-4e96-bc3d-77c20494505c",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is a new LinkedIn post to generate a comment for.\n\nPost description:\n\"\"\"\n{{ $json.body.caption }}\n\"\"\"\n\nTone:\n{{ $json.body.tone || \"Professional Tone\"}}  \n\nIf possible, try to include the following feedback question in a natural way:\n{{ $json.body.hint }}(optional)\n\nGenerate a single human-like comment for this post based on the input.\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a helpful, professional assistant that generates thoughtful, human-like comments for LinkedIn posts. Your goal is to help users engage meaningfully on posts by crafting context-aware, relevant, and personalized comments.\n\nYou have access to a short-term memory of recent comments made by the user. Use this memory to:\n- Avoid repetition\n- Maintain variety in language and tone\n- Reflect consistency in personal or professional voice\n\nEach comment should:\n- Reflect the given tone by user\n- Be directly relevant to the post content\n- Feel natural and written by a human\n- Avoid generic phrases unless used intentionally for tone\n\nKeep the comment concise within 40 words\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -16,
        560
      ],
      "id": "e3896723-4b74-4209-97f5-46fb49e8d288",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"comment\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        304,
        784
      ],
      "id": "cc91d630-8587-4b86-800c-6111e1b721a5",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        592,
        560
      ],
      "id": "86999192-e4b7-481e-8d2b-99d56725433d",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook1').item.json.body.user_info.id }}",
        "contextWindowLength": 3
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        112,
        800
      ],
      "id": "da60647f-705b-4b01-a550-32402dbda929",
      "name": "Simple Memory1"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.srv894857.hstgr.cloud",
            "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36",
            "content-length": "628",
            "accept": "*/*",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9,la;q=0.8",
            "content-type": "application/json",
            "origin": "https://www.linkedin.com",
            "priority": "u=1, i",
            "referer": "https://www.linkedin.com/",
            "sec-ch-ua": "\"Chromium\";v=\"140\", \"Not=A?Brand\";v=\"24\", \"Google Chrome\";v=\"140\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"macOS\"",
            "sec-fetch-dest": "empty",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "cross-site",
            "x-forwarded-for": "45.118.107.220",
            "x-forwarded-host": "n8n.srv894857.hstgr.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "746840d2afb8",
            "x-real-ip": "45.118.107.220"
          },
          "params": {},
          "query": {},
          "body": {
            "hint": "",
            "caption": "How to make $10k/month as a college student using AI (even if you‚Äôre broke, inexperienced, and have no audience):1. Why Students Have the Edge2. Why Most Advice Aimed at You is Trash3. What is Leveraged Consulting4. What to Avoid5. What Actually Works6. Why you Have a Shot7. Your $100/Month AI Stack8. How to Get ClientsCheck the carousel for details.Also - dropped a link to a video in the comments.",
            "tone": "professional",
            "model": "gpt-4.1-nano",
            "unique_id": "user_2ggaxtt_urn:li:activity:7370661148909662208",
            "user_info": {
              "id": "user_2ggaxtt",
              "email": "unknown",
              "name": "unknown",
              "profile_url": "unknown"
            }
          },
          "webhookUrl": "https://n8n.srv894857.hstgr.cloud/webhook/linkedin-comment",
          "executionMode": "production"
        }
      }
    ]
  },
  "versionId": "dccff274-cf5b-486c-b8ec-817ca7b6753a",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-08T11:50:42.937Z",
      "updatedAt": "2025-09-08T11:50:42.937Z",
      "role": "workflow:owner",
      "workflowId": "HjYS9fwMWJjmYm9w",
      "projectId": "iOyc3VpWKvgHH9fv"
    }
  ],
  "tags": []
}