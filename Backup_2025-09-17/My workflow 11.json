{
  "createdAt": "2025-09-12T06:59:14.871Z",
  "updatedAt": "2025-09-13T12:20:17.000Z",
  "id": "k1Gb9YeD1EnwyYBD",
  "name": "My workflow 11",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4-turbo-preview",
        "options": {}
      },
      "id": "5247a8d9-769c-4088-b980-7959256fe0f3",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        288,
        544
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "U0FfOj4uWFY6nYAE",
          "name": "Pankaj OpenAI Account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "type": "string",
              "value": "={{$json.output}}"
            }
          ]
        },
        "options": {}
      },
      "id": "73c449c1-d3b8-406b-862a-34cc15316fdd",
      "name": "Success",
      "type": "n8n-nodes-base.set",
      "position": [
        1088,
        320
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "=Consume Google Calendar API",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "floyd.mahou@blockachainintegration.com",
          "cachedResultName": "floyd.mahou@blockachainintegration.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "attendees": [],
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "id": "2f934985-7ea1-42f8-afd7-b497f0c893dd",
      "name": "Create Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        528,
        544
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d6M4PVTouNnERS2M",
          "name": "Lakshit Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "floyd.mahou@blockachainintegration.com",
          "cachedResultName": "floyd.mahou@blockachainintegration.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "options": {
          "sendUpdates": "all"
        }
      },
      "id": "cee7819a-7bf2-4087-8a36-8f2bce67f332",
      "name": "Delete Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        640,
        544
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d6M4PVTouNnERS2M",
          "name": "Lakshit Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "operation": "update",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "floyd.mahou@blockachainintegration.com",
          "cachedResultName": "floyd.mahou@blockachainintegration.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "updateFields": {
          "end": "={{ $fromAI(\"endTime\") }}",
          "start": "={{ $fromAI(\"startTime\") }}"
        }
      },
      "id": "6e51e354-9e60-435f-a6cd-725cb10174d8",
      "name": "Update Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        768,
        544
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d6M4PVTouNnERS2M",
          "name": "Lakshit Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "id": "8d40e790-11a7-4248-b25d-6739a5707cd1",
      "name": "WhatsApp Trigger",
      "type": "n8n-nodes-base.whatsAppTrigger",
      "position": [
        64,
        320
      ],
      "webhookId": "d214a512-4e47-4795-94e7-8fe22d728e53",
      "typeVersion": 1,
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "iAH92FLxlDHNqMm6",
          "name": "WhatsApp OAuth account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('WhatsApp Trigger').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "ENTER YOUR PHONE NUMBER HERE",
        "textBody": "={{ $json.response }}",
        "additionalFields": {}
      },
      "id": "2e52f303-c2f5-455c-b154-55eab0e8e6d2",
      "name": "WhatsApp Business Cloud",
      "type": "n8n-nodes-base.whatsApp",
      "position": [
        1312,
        320
      ],
      "webhookId": "313cb932-f2a1-413c-82be-9992dd6f7fb2",
      "typeVersion": 1,
      "credentials": {
        "whatsAppApi": {
          "id": "9w0eEZHNiZEWkTBa",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "floyd.mahou@blockachainintegration.com",
          "cachedResultName": "floyd.mahou@blockachainintegration.com"
        },
        "limit": "={{ $fromAI('Limit', ``, 'number') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "id": "71fc3910-dd9c-4b18-974d-8c51a4a59feb",
      "name": "Search Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        880,
        544
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d6M4PVTouNnERS2M",
          "name": "Lakshit Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WhatsApp Trigger').item.json.messages[0].type }}"
      },
      "id": "7b7ffb14-28f6-425b-ad76-163d6ea397ed",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        400,
        544
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages[0].text.body }}",
        "options": {
          "systemMessage": "=# Overview  \nYou are a personal AI assistant that manages *your own calendar* through WhatsApp messages. You must always trigger the correct module corresponding to the requested action (create, update, search, delete). No assumptions or shortcuts—only execute via the designated modules.\n\n## Context  \n- You are the only user of this system.  \n- All requests come from WhatsApp and responses must be sent via WhatsApp.  \n- You use Google Calendar modules to perform every action and confirm completion.  \n- You understand both French and English.  \n- Your tone is neutral, fast, and action-focused.  \n\n## Instructions  \n1. Always check if the input contains a clear calendar-related request.  \n2. If the message is a greeting or polite phrase (e.g., \"Hi\", \"Thanks\", \"Hello\"), reply briefly and kindly.  \n3. Always route tasks through the correct module:\n   - Always Use **Search Event** to:\n     - List all upcoming meetings.\n     - Show availability.\n     - Retrieve a specific event before updating or deleting it.\n   -Always Use **Create Event with Attendee** to create any new event (even without participants).\n   - Always Use **Update Event** only after retrieving the target event with **Search Event**.\n   - Always Use **Delete Event** only after retrieving the event with **Search Event**.\n4. Never perform any action without using the appropriate module.  \n5. If information is missing (like time or participants), ask one short, targeted follow-up question.  \n6. Always confirm the completed action with a short message via WhatsApp.  \n7. If the input is unclear, ask for clarification. Never guess.  \n8. Never explain your steps or how you operate. Just act.  \n\n## Tools  \n- Search Event (availability/meeting schedule:calendar)  \n- Create Event with Attendee (create:event)  \n- Update Event (update:event)  \n- Delete Event (delete:event)  \n\n## Examples  \n- Input: \"Yo\"  \n  - Output: \"Hi! What would you like to do with your calendar?\"  \n- Input: \"Add a call tomorrow at 9am with Julien\"  \n  - Modules: Create Event with Attendee  \n  - Output: \"Call with Julien added tomorrow at 9am.\"  \n- Input: \"What meetings do I have Friday?\"  \n  - Modules: Search Event  \n  - Output: \"On Friday you have: 10am 'Budget Review' with Claire, 3pm 'Product Sync' with Marc.\"  \n- Input: \"List my meetings this week\"  \n  - Modules: Search Event  \n  - Output: \"Here are your meetings this week: Monday 10am with Hugo, Wednesday 2pm with Ana...\"  \n- Input: \"Delete the HR sync tomorrow\"  \n  - Modules: Search Event → Delete Event  \n  - Output: \"Done. The HR sync for tomorrow has been deleted.\"  \n- Input: \"Thanks\"  \n  - Output: \"You're welcome!\"  \n- Input: \"Move the 2pm meeting to 4pm\"  \n  - Modules: Search Event → Update Event  \n  - Output: \"The meeting has been moved to 4pm.\"  \n- Input: \"Create a ‘Sprint Review’ meeting tomorrow at 11am with Lisa and Karim\"  \n  - Modules: Create Event with Attendee  \n  - Output: \"‘Sprint Review’ meeting created tomorrow at 11am with Lisa and Karim.\"  \n\n## SOP (Standard Operating Procedure)  \n1. Read the WhatsApp message.  \n2. Identify the intent:\n   - View meetings: use \"Search Event\"\n   - Create meeting: use \"Create Event with Attendee\"\n   - Update meeting: use \"Search Event\" → \"Update Event\"\n   - Delete meeting: use \"Search Event\" → \"Delete Event\"\n3. Always use the correct module—no exceptions.  \n4. Send a short confirmation message via WhatsApp.  \n5. If data is missing, ask a concise follow-up question.  \n\n## Final Notes  \n- You are the only user.  \n- Never handle any action without triggering the corresponding module.  \n- All confirmations are sent in real-time via WhatsApp.  \n- Default meeting duration is one hour.  \n\nCurrent time is {{ $now.format('yyyy-MM-dd') }}  \nTime zone: Paris/Europe  "
        }
      },
      "id": "4241cdf8-448f-4f67-a8ea-faa70c519a74",
      "name": "TimePilot",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        496,
        320
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "content": "## 🟩 Block 1 – WhatsApp Trigger\n\nPurpose: Entry point of the workflow.\nIt triggers the automation when a message is received via WhatsApp.\n📥 User Input = A WhatsApp message (e.g. “What’s my schedule today?”)\n",
        "height": 700,
        "width": 220,
        "color": 4
      },
      "id": "635dd735-b3cd-4b55-803d-3d2a09c4c813",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 🟦 Block 2 – TimePilot (Tools Agent)\nPurpose: The brain of the system.\nThis is the main AI agent that receives the message, interprets it using GPT, and decides what calendar action to trigger.\n\n🔁 It connects with:\nOpenAI Chat Model → to understand natural language\nSimple Memory → to retain conversation context\nCalendar Modules → to take the proper action (create, delete, update…)",
        "height": 700,
        "width": 800,
        "color": 5
      },
      "id": "90c6d8ac-ad06-4551-8c35-76ce8f26d4a9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        240,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 🟪 Part 3 – Output & Confirmation\n✅ Success (manual)\nPurpose: Triggered when everything runs smoothly.\nPrepares a success message based on the operation performed.\n\n💬 WhatsApp Business Cloud – message:send\nPurpose: Sends the final response to the user directly on WhatsApp.\n\n\n",
        "height": 700,
        "width": 440,
        "color": 6
      },
      "id": "63117460-060f-406f-843c-7683a8da8604",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1072,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 🛠️ How to use TimePilot Agent (WhatsApp Calendar Assistant)\n\n✅ Prerequisites\n-WhatsApp Business Cloud account\n-Google Calendar connected in n8n\n-OpenAI API Key (GPT-4 or GPT-3.5)\n-A verified phone number in Meta Developer Portal\n-Meta App created and approved (for messages access)\n-n8n running with a webhook accessible from Meta\n-TimePilot Workflow imported into n8n\n\n🧩 STEP 1 – Create a Meta App\nGo to https://developers.facebook.com/apps\n\nClick Create App → Type: Business\nAdd WhatsApp Product\nAdd your verified phone number\nSave your Phone Number ID and WhatsApp Business Account ID\n\n🔑 STEP 2 – Add WhatsApp Product\nIn your Meta App → Add product → Select WhatsApp\n\nGenerate a test token or configure permanent access token\nNote your Access Token, and Business Account ID\n\n🔁 STEP 3 – Configure Webhook (n8n)\nCopy your n8n webhook URL (e.g. https://yourn8n.com/webhook/timepilot)\n\nIn Meta Dashboard → WhatsApp → Webhooks\nAdd webhook → Paste your n8n webhook URL\nSubscribe to the following fields:\n\n-management\n-messaging\n\n🔐 STEP 4 – Setup Token in n8n Credentials\nGo to n8n → Credentials → HTTP Basic Auth / OAuth2 / Bearer Token\n\nAdd Meta API Token for WhatsApp module\nAdd Google Calendar OAuth2 credential\n\n🧠 STEP 5 – Add OpenAI API Key\nGo to n8n → Credentials → OpenAI\n\nPaste your API key\nChoose GPT-3.5 or GPT-4\n\n🧱 STEP 6 – Modules connected in the TimePilot Agent\n📅 Create Event → Handles creation of new Google Calendar events\n\n✏️ Update Event → Changes existing events (title, time, etc.)\n\n🗑 Delete Event → Removes an event\n\n🔍 Search Event → Checks availability or lists upcoming events\n\n💬 WhatsApp Cloud → Sends reply with confirmation or schedule\n\n🤖 OpenAI Chat Model → Interprets the user’s message\n\n🧠 Memory (optional) → Maintains past request context\n\n🧪 STEP 7 – Test It!\nSend a message via WhatsApp to your connected number:\n\n“Create a meeting with Anna at 4pm tomorrow”\n\nn8n will process the request and return:\n\n“✅ Your event has been created.”",
        "height": 1360,
        "width": 540
      },
      "id": "3c94e928-e4fe-4047-938e-190a1e70ebb2",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3504,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaDelete"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        448,
        0
      ],
      "id": "3db660d1-aebc-4e96-afc5-7395bf91abc1",
      "name": "Delete media",
      "webhookId": "55e8a302-4c2c-4798-a274-7f8ae58bc711",
      "credentials": {
        "whatsAppApi": {
          "id": "9w0eEZHNiZEWkTBa",
          "name": "WhatsApp account"
        }
      }
    }
  ],
  "connections": {
    "Success": {
      "main": [
        [
          {
            "node": "WhatsApp Business Cloud",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TimePilot": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "TimePilot",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Event": {
      "ai_tool": [
        [
          {
            "node": "TimePilot",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search Event": {
      "ai_tool": [
        [
          {
            "node": "TimePilot",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "TimePilot",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "TimePilot",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "TimePilot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "TimePilot",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "bb39438e-86b7-421b-9a9a-7625b1e62080",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-12T06:59:14.875Z",
      "updatedAt": "2025-09-12T06:59:14.875Z",
      "role": "workflow:owner",
      "workflowId": "k1Gb9YeD1EnwyYBD",
      "projectId": "iOyc3VpWKvgHH9fv"
    }
  ],
  "tags": []
}